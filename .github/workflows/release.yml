name: Release new version

on:
  workflow_dispatch:
    inputs:
      pre-release-tag:
        required: false
        description: 'Tag for pre-release (optional)'
      major-release:
        required: false
        description: 'Trigger a major release (optional). Leave empty for regular release.'

jobs:
  integration-tests:
    uses: ./.github/workflows/integration-tests.yml
    secrets: inherit

  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: integration-tests
    steps:    
    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 
        ref: main
        token: ${{ secrets.RELEASE_PAT }}
   
    - name: Setup git config
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
      shell: bash

    - name: Get changes since last release
      id: changes
      run: |
        OLD_TAG=$(git describe --tags --abbrev=0)
        CHANGES=$(git log $OLD_TAG..HEAD --pretty=format:%s)
        echo "changes<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGES" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        # Strip 'v' prefix from the old tag if it exists
        echo "old_tag=$($OLD_TAG | sed 's/^v//')" >> $GITHUB_OUTPUT

    - name: Generate version
      id: version
      uses: firebolt-db/action-generate-version@v1
      with:
        changes: ${{ steps.changes.outputs.changes }}
        old-tag: ${{ steps.changes.outputs.old_tag }}

    - name: Version bump
      run: |
        # Bump version = <number> in version file
        sed -i "s/SdkVersion string = .*/SdkVersion string = \"v${{ steps.version.outputs.new-tag }}\"/g" version/version.go
        git add version/version.go
        git commit -m "Automatic version bump to v${{ steps.version.outputs.new-tag }}"
        git push origin main
      shell: bash
        
    - name: Publish tag on github
      run: |
        git tag v${{ steps.version.outputs.new-tag }}
        git push origin v${{ steps.version.outputs.new-tag }}
      shell: bash
        
    - name: Run go list
      run: |
        GOPROXY=proxy.golang.org go list -m github.com/firebolt-db/firebolt-go-sdk@v${{ steps.version.outputs.new-tag }}
      shell: bash
